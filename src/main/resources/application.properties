spring.application.name=CryptoSandbox

# Configuraci�n de la base de dato
spring.datasource.url=jdbc:postgresql://cryptopruebas.cpxhmby4ngsl.us-east-1.rds.amazonaws.com:5432/cryptos
spring.datasource.username=postgres
spring.datasource.password=12345687
spring.jpa.show-sql=true

#Tomcat
server.servlet.context-path=/
#Hibernate
# Indicamos que vamos a usar PostgreSQL como gestor de base de datos
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
# Indicamos que Hibernate debe actualizar las tablas / columnas autom�ticamente cuando hagamos cambios en las entidades
# (por ejemplo, a�adir una nueva columna)
spring.jpa.hibernate.ddl-auto=update

# Mostramos las sentencias SQL que Hibernate ejecuta en la consola
logging.level.org.hibernate.SQL=DEBUG

spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.cache=false

#GOOGLE
spring.security.oauth2.client.registration.google.client-id=542292481741-5u8ot5pngurg5fjpagl5bog16pv8aj54.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.registration.google.redirect-uri=http://cryptosandbox.duckdns.org//login/oauth2/code/google
#spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo

#GITHUB
spring.security.oauth2.client.registration.github.client-id=Ov23li3CZfnzpAwqDDZQ
spring.security.oauth2.client.registration.github.client-secret=def9fae62fc30f34a1a7838a947d98387619883d
spring.security.oauth2.client.registration.github.scope=read:user,user:email
spring.security.oauth2.client.registration.github.redirect-uri=https://ec2-52-23-39-220.compute-1.amazonaws.com/login/oauth2/code/github
#spring.security.oauth2.client.registration.github.redirect-uri=http://localhost:8080/login/oauth2/code/github

#SERVIDOR DE CORREO
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=cryptosandbox929@gmail.com
spring.mail.password=${EMAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

